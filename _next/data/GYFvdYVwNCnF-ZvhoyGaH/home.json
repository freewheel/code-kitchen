{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      p: \"p\",\n      strong: \"strong\",\n      ul: \"ul\",\n      li: \"li\",\n      h2: \"h2\",\n      code: \"code\",\n      pre: \"pre\"\n    }, _provideComponents(), props.components), {Playground} = _components;\n    if (!Playground) _missingMdxReference(\"Playground\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h1, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/freewheel/code-kitchen\",\n          children: \"Code Kitchen üßë‚Äçüç≥\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Code Kitchen\"\n        }), \" is a pure-static live-code playground that is easy to be used in a closed source environment for documenting React UI Libraries.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Compared to other solutions, it supports the following features:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"Private source code dependencies\"\n          }), \" support\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"Multiple files\"\n          }), \" in a single demo\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"CSS\"\n          }), \" (CSS modules) and JSON files\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Completely \", _jsx(_components.strong, {\n            children: \"static\"\n          }), \" without the need for a remote server\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Type hints in the code editor\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(\"hr\", {}), \"\\n\", _jsx(_components.h2, {\n        children: \"Demo üé©\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Following is a simple demo, it shows:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"Import and render a custom React component \", _jsx(_components.code, {\n            children: \"<MovingDot />\"\n          }), \" from a private module \", _jsx(_components.code, {\n            children: \"demo-lib\"\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Import \", _jsx(_components.code, {\n            children: \"styles.module.css\"\n          }), \" and customize the styles with CSS Module\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can change codes in the code editor and see the changes instantly get rendered in preview panel.\"\n      }), \"\\n\", _jsxs(Playground, {\n        name: \"A Moving Dot Demo\",\n        dir: \"v\",\n        children: [_jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-tsx\",\n            metastring: \"App.tsx\",\n            children: \"import React from \\\"react\\\";\\nimport { MovingDot } from \\\"demo-lib\\\";\\n\\nimport styles from \\\"./styles.module.css\\\";\\n\\nexport default () => {\\n  return (\\n    <div className={styles.container}>\\n      <MovingDot color=\\\"white\\\" size={50}>\\n        <div className={styles.tada}>üéâ</div>\\n      </MovingDot>\\n    </div>\\n  );\\n};\\n\"\n          })\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css\",\n            metastring: \"styles.module.css\",\n            children: \".container {\\n  background: #aaa;\\n  cursor: none;\\n  user-select: none;\\n  min-height: 160px;\\n  height: 100%;\\n}\\n\\n.container:active > div {\\n  filter: brightness(0.9);\\n}\\n\\n.tada {\\n  font-size: 20px;\\n}\\n\"\n          })\n        })]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: _jsx(_components.a, {\n          href: \"./how-it-works\",\n          children: \"How it works? üîó\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}